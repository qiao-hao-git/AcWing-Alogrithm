#include<iostream>
#include<cstring>
#include<queue>

using namespace std;
const int N = 1e5 + 10;
int h[N], ne[N], e[N];
int d[N];
int m, n;
int idx = 0;
queue<int> res, q;

void add(int a, int b) {
    e[idx] = b;
    ne[idx] = h[a];
    h[a] = idx++;
}

void topsort() {
    for(int i = 1; i <= n; i++) {
        if(d[i] == 0) {
            q.push(i);
        }
    }
    while(q.size()) {
        int t = q.front();
        q.pop();
        res.push(t);
        for(int i = h[t]; i != -1; i = ne[i]) {
            int j = e[i];
            d[j]--;
            if(d[j] == 0) {
                q.push(j);
            }
        }
    }
    if(res.size() == n) {
        while(res.size()) {
            cout << res.front() << ' ';
            res.pop();
        }
    } else {
        cout << "-1";
    }
}

int main() {
    memset(h, -1, sizeof(h));
    memset(d, 0, sizeof(d));
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int a, b;
        cin >> a >> b;
        add(a, b);
        d[b]++;
    }
    topsort();
    return 0;
}
