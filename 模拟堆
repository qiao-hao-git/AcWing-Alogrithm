#include <iostream>
#include <algorithm>
#include <string.h>
using namespace std;

const int N = 1e5 + 10;

int n, k, x, sz;
string s;
int h[N], ph[N], hp[N];

void swap_heap(int a, int b)
{
    swap(ph[hp[a]], ph[hp[b]]);
    swap(hp[a], hp[b]);
    swap(h[a], h[b]);
}

void down(int x)
{
    int t = x;
    if(2 * x <= sz && h[2 * x] < h[t]) t = 2 * x;
    if(2 * x + 1 <= sz && h[2 * x + 1] < h[t]) t = 2 * x + 1;
    if(t != x)
    {
        swap_heap(x, t);
        down(t);
    }
}

void up(int x)
{
    while(x / 2 && h[x / 2] > h[x])
    {
        swap_heap(x, x / 2);
        x /= 2;
    }
}
int main()
{
    scanf("%d", &n);
    int m = 0;
    while(n --)
    {
        cin >> s;
        if(s == "I")
        {
            scanf("%d", &x);
            m ++;
            sz ++;
            h[sz] = x;
            ph[m] = sz;
            hp[sz] = m;
            up(sz);
        }
        else if(s == "PM") cout << h[1] << endl;
        else if(s == "DM")
        {
            swap_heap(1, sz);
            sz --;
            down(1);
        }
        else if(s == "D")
        {
            scanf("%d", &k);
            k = ph[k];
            swap_heap(k, sz);
            sz --;
            down(k), up(k);
        }
        else
        {
            scanf("%d%d", &k, &x);
            k = ph[k];
            h[k] = x;
            down(k);
            up(k);
        }
    }
    return 0;
}
