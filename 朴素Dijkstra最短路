#include<iostream>
#include<cstring>

using namespace std;
const int N = 510;
const int M = 1e5 + 10;
int h[N], e[M], ne[M], w[M];
int state[N];
int idx = 0;
int n, m;
int dis[N];

void add(int a, int b, int c) {
    e[idx] = b;
    w[idx] = c;
    ne[idx] = h[a];
    h[a] = idx++;
}

void dijkstra() {
    dis[1] = 0;
    for(int i = 1; i <= n; i++) {
        int t = -1;
        for(int j = 1; j <= n; j++) {
            if(!state[j] && (t == -1 || dis[t] > dis[j])) {
                t = j;
            }
        }
        state[t] = 1;
        for(int j = h[t]; j != -1; j = ne[j]) {
            int k = e[j];
            dis[k] = min(dis[k], dis[t] + w[j]);
        }
    }
}

int main() {
    memset(h, -1, sizeof(h));
    memset(dis, 0x3f, sizeof(dis));
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        add(a, b, c);
    }
    dijkstra();
    if(dis[n] == 0x3f3f3f3f) {
        cout << "-1";
    } else {
        cout << dis[n];
    }
    return 0;    
}
