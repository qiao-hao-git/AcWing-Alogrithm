#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 3e5 + 10;

int a[N], b[N];
typedef pair<int, int> PII;
vector<int> alls;
vector<PII> add, query;

int find(int x)
{
    int l = 0, r = alls.size() - 1;
    while(l < r)
    {
        int mid = (l + r) >> 1;
        if(alls[mid] >= x) r = mid;
        else l = mid + 1;
    }
    return r + 1;
}

int main()
{
    int n, m, x, c, l, r;
    cin >> n >> m;
    for(int i = 0; i < n; i ++)
    {
        cin >> x >> c;
        alls.push_back(x);
        add.push_back({x, c});
    }
    for(int i = 0; i < m; i ++)
    {
        cin >> l >> r;
        alls.push_back(l);
        alls.push_back(r);
        query.push_back({l, r});
    }
    sort(alls.begin(), alls.end());
    alls.erase(unique(alls.begin(), alls.end()), alls.end());
    for(auto item : add)
    {
        int x = find(item.first);
        a[x] += item.second;
    }
    for(int i = 1; i <= alls.size(); i ++) b[i] = b[i - 1] + a[i];
    for(auto item : query)
    {
        int l = find(item.first), r = find(item.second);
        cout << b[r] - b[l - 1] << endl;
    }
    return 0;
}
