#include<iostream>
#include<algorithm>
#include<queue>
#include<cstring>

using namespace std;
const int N = 1e5 + 10;
int h[N], e[N], ne[N], w[N];
int idx = 0, n, m;
int dist[N], state[N], cnt[N];

void add(int a, int b, int c) {
    e[idx] = b;
    ne[idx] = h[a];
    w[idx] = c;
    h[a] = idx++;
}

bool spfa() {
    queue<int> q;
    for(int i = 1; i <= n; i++) {
        q.push(i);
        state[i] = 1;
    }
    while(q.size()) {
        int t = q.front();
        q.pop();
        state[t] = 0;
        for(int i = h[t]; i != -1; i = ne[i]) {
            int j = e[i];
            if(dist[j] > dist[t] + w[i]) {
                dist[j] = dist[t] + w[i];
                cnt[j] = cnt[t] + 1;
                if(cnt[j] > n) {
                    return true;
                }
                if(!state[j]) {
                    state[j] = 1;
                    q.push(j);
                } 
            }
        }
    }
    return false;
}

int main() {
    cin >> n >> m;
    memset(h, -1, sizeof(h));
    for(int i = 0; i < m; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        add(a, b, c);
    }
    if(spfa()) {
        puts("Yes");
    } else {
        puts("No");
    }
    return 0;
}
